-- DROPPING TABLES ----------------------------------------
drop table IF EXISTS rest_app."PAYMENT";
drop table IF EXISTS rest_app."INVENTORY";
drop table IF EXISTS rest_app."ITEM";
drop table IF EXISTS rest_app."INVOICE";
drop table IF EXISTS rest_app."CUSTOMER";
drop table IF EXISTS rest_app."STORE";
drop table IF EXISTS rest_app."STAFF";
drop table IF EXISTS rest_app."ADDRESS";
drop table IF EXISTS rest_app."CITY";
drop table IF EXISTS rest_app."COUNTRY";
drop table IF EXISTS rest_app."SALE";


create table rest_app.country (
    country_id  integer generated by default as identity
        primary key,
    country     varchar(50)                         not null
        constraint unique_country_name
            unique,
    last_update timestamp default CURRENT_TIMESTAMP not null
);


create table rest_app.city
(
    city_id     integer generated by default as identity
        primary key,
    city        varchar(50)                         not null,
    country_id  integer                             not null
        constraint fk_city_country_id
            references rest_app.country,
    last_update timestamp default CURRENT_TIMESTAMP not null,
    constraint unique_city_country
        unique (city, country_id)
);


--

create table rest_app.address
(
    address_id  integer generated by default as identity
        primary key,
    gps_code    varchar(10) default 'GH99999999'::character varying not null,
    phone       varchar(20)                                         not null
        constraint unique_address_phone
            unique,
    city_id     integer                                             not null
        constraint fk_address_city_id
            references rest_app.city,
    last_update timestamp   default CURRENT_TIMESTAMP               not null,
    constraint unique_address_and_phone
        unique (gps_code, phone)
);

--

create table rest_app.customer
(
    customer_id integer generated by default as identity
        primary key,
    first_name  varchar(45)                         not null,
    last_name   varchar(45)                         not null,
    address_id  integer                             not null
        constraint fk_customer_address_id
            references rest_app.address,
    create_date timestamp default CURRENT_TIMESTAMP not null,
    last_update timestamp default CURRENT_TIMESTAMP,
    constraint unique_customer_address_names
        unique (last_name, first_name, address_id)
);

create table rest_app.invoice
(
    invoice_id  integer generated by default as identity
        primary key,
    invoice_nr  varchar(20)                         not null,
    customer_id integer                             not null
        constraint fk_customer_id
            references rest_app.customer,
    last_update timestamp default CURRENT_TIMESTAMP not null,
    constraint unique_customer_invoice_nr
        unique (customer_id, invoice_nr)
);


--

create table rest_app.staff
(
    staff_id    integer generated by default as identity
        primary key,
    first_name  varchar(45)                         not null,
    last_name   varchar(45)                         not null,
    username    varchar(16)                         not null
        constraint unique_staff_username
            unique,
    last_update timestamp default CURRENT_TIMESTAMP not null,
    constraint unique_staff_last_first_username
        unique (last_name, first_name, username)
);


create table rest_app.sale
(
    sale_id     integer generated by default as identity
        primary key,
    sale_date   timestamp   default CURRENT_TIMESTAMP not null,
    invoice_id  integer                               not null
        constraint fk_sale_invoice_id
            references rest_app.invoice,
    sale_nr     varchar(20) default 'AZQASW'::character varying
        constraint unique_sale_nr
            unique,
    staff_id    integer                               not null
        constraint fk_sale_staff_id
            references rest_app.staff,
    last_update timestamp   default CURRENT_TIMESTAMP not null,
    constraint unique_sale_staff_invoice
        unique (sale_nr, staff_id, invoice_id)
);


create table rest_app.payment
(
    payment_id   integer generated by default as identity
        primary key,
    staff_id     integer                             not null
        constraint fk_payment_staff_id
            references rest_app.staff,
    invoice_id   integer                             not null
        constraint fk_payment_invoice_id
            references rest_app.invoice,
    payment_nr   varchar(128)                        not null
        constraint unique_payment_nr
            unique,
    amount       numeric(5, 2)                       not null,
    payment_date timestamp default CURRENT_TIMESTAMP not null,
    last_update  timestamp default CURRENT_TIMESTAMP not null
);

--

create table rest_app.store
(
    store_id    integer generated by default as identity
        primary key,
    store_name  varchar(125)                        not null,
    staff_id    integer                             not null
        constraint fk_staff_id
            references rest_app.staff,
    address_id  integer                             not null
        constraint fk_store_address_id
            references rest_app.address,
    last_update timestamp default CURRENT_TIMESTAMP not null,
    constraint unique_store_name_address
        unique (store_name, address_id)
);


--

create table rest_app.inventory
(
    inventory_id integer generated by default as identity
        primary key,
    item_id      integer                             not null
        constraint fk_inventory_item_id
            references rest_app.item,
    store_id     integer                             not null
        constraint fk_inventory_store_id
            references rest_app.store,
    stock_qty    integer   default 0                 not null,
    reorder_qty  integer   default 0                 not null,
    last_update  timestamp default CURRENT_TIMESTAMP not null,
    constraint unique_inventory_item_store
        unique (item_id, store_id)
);


--


