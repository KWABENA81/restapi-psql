-- DROPPING TABLES ----------------------------------------
drop table IF EXISTS "PAYMENT";
drop table IF EXISTS "INVENTORY";
drop table IF EXISTS "ITEM";
drop table IF EXISTS "INVOICE";
drop table IF EXISTS "CUSTOMER";
drop table IF EXISTS "STORE";
drop table IF EXISTS "STAFF";
drop table IF EXISTS "ADDRESS";
drop table IF EXISTS "CITY";
drop table IF EXISTS "COUNTRY";
drop table IF EXISTS "SALE";


create table country (
    country_id  integer generated by default as identity
        primary key,
    country     varchar(50)                         not null
        constraint unique_country_name
            unique,
    last_update timestamp default CURRENT_TIMESTAMP not null
);


create table city
(
    city_id     integer generated by default as identity
        primary key,
    city        varchar(50)                         not null,
    country_id  integer                             not null
        constraint fk_city_country_id
            references country,
    last_update timestamp default CURRENT_TIMESTAMP not null,
    constraint unique_city_country
        unique (city, country_id)
);


create table address
(
    address_id  integer generated by default as identity
        primary key,
    gps_code    varchar(10) default 'GH99999999'::character varying not null,
    phone       varchar(20)                                         not null
        constraint unique_address_phone
            unique,
    city_id     integer                                             not null
        constraint fk_address_city_id
            references city,
    last_update timestamp   default CURRENT_TIMESTAMP               not null,
    constraint unique_address_and_phone
        unique (gps_code, phone)
);


create table customer
(
    customer_id integer generated by default as identity
        primary key,
    first_name  varchar(45)                         not null,
    last_name   varchar(45)                         not null,
    address_id  integer                             not null
        constraint fk_customer_address_id
            references address,
    create_date timestamp default CURRENT_TIMESTAMP not null,
    last_update timestamp default CURRENT_TIMESTAMP,
    constraint unique_customer_address_names
        unique (last_name, first_name, address_id)
);

create table invoice
(
    invoice_id  integer generated by default as identity
        primary key,
    invoice_nr  varchar(20)                         not null,
    customer_id integer                             not null
        constraint fk_customer_id
            references customer,
    last_update timestamp default CURRENT_TIMESTAMP not null,
    constraint unique_customer_invoice_nr
        unique (customer_id, invoice_nr)
);


create table staff
(
    staff_id    integer generated by default as identity
        primary key,
    first_name  varchar(45)                         not null,
    last_name   varchar(45)                         not null,
    address_id  integer                             not null
        constraint fk_staff_address_id
            references address,
    username    varchar(16)                         not null
        constraint unique_staff_username
            unique,
    last_update timestamp default CURRENT_TIMESTAMP not null,
    constraint unique_staff_last_first_username
        unique (last_name, first_name, username)
);


create table order
(
    sale_id     integer generated by default as identity
        primary key,
    sale_date   timestamp   default CURRENT_TIMESTAMP not null,
    invoice_id  integer                               not null
        constraint fk_sale_invoice_id
            references invoice,
    sale_nr     varchar(20) default 'AZQASW'::character varying
        constraint unique_sale_nr
            unique,
    staff_id    integer                               not null
        constraint fk_sale_staff_id
            references staff,
    last_update timestamp   default CURRENT_TIMESTAMP not null,
    constraint unique_sale_staff_invoice
        unique (sale_nr, staff_id, invoice_id)
);


create table payment
(
    payment_id   integer generated by default as identity
        primary key,
    staff_id     integer                             not null
        constraint fk_payment_staff_id
            references staff,
    invoice_id   integer                             not null
        constraint fk_payment_invoice_id
            references invoice,
    payment_nr   varchar(128)                        not null
        constraint unique_payment_nr
            unique,
    amount       numeric(5, 2)                       not null,
    payment_date timestamp default CURRENT_TIMESTAMP not null,
    last_update  timestamp default CURRENT_TIMESTAMP not null
);


create table store
(
    store_id    integer generated by default as identity
        primary key,
    store_name  varchar(125)                        not null,
    staff_id    integer                             not null
        constraint fk_staff_id
            references staff,
    address_id  integer                             not null
        constraint fk_store_address_id
            references address,
    last_update timestamp default CURRENT_TIMESTAMP not null,
    constraint unique_store_name_address
        unique (store_name, address_id)
);


create table if not exists rest_app.inventory
(
    inventory_id integer generated by default as identity
        primary key,
    item_id      integer                             not null
        constraint fk_inventory_item_id
            references rest_app.item,
    store_id     integer                             not null
        constraint fk_inventory_store_id
            references rest_app.store,
    stock_qty    integer   default 0                 not null,
    reorder_qty  integer   default 0                 not null,
    last_update  timestamp default CURRENT_TIMESTAMP not null,
    constraint unique_inventory_item_store
        unique (item_id, store_id)
);



create table inventory
(
    inventory_id integer generated by default as identity
        primary key,
    item_id      integer                             not null
        constraint fk_inventory_item_id
            references item,
    store_id     integer                             not null
        constraint fk_inventory_store_id
            references store,
    stock_qty    integer   default 0                 not null,
    reorder_qty  integer   default 0                 not null,
    last_update  timestamp default CURRENT_TIMESTAMP not null,
    constraint unique_inventory_item_store
        unique (item_id, store_id)
);



----------------
curl -X POST localhost:8085/countries/add -H 'Content-type:application/json' -d '{ "country": "Ivory Coast"}'